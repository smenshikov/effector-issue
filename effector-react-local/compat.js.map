{"version":3,"file":"compat.js","sources":["effector-react/createWatch.ts","effector-react/withDisplayName.ts","effector-react/apiBase.ts","effector-react/nossr.ts","effector-react/createComponent.ts","effector-react/createReactState.ts","effector-react/createGate.ts","effector-react/useIsomorphicLayoutEffect.ts","effector-react/throw.ts","effector-react/connect.ts","effector-react/createContextComponent.ts","effector-react/createStoreConsumer.ts"],"sourcesContent":["import {Store, clearNode, step, createNode, Scope, Node} from 'effector'\n\nexport function createWatch<T>(\n  store: Store<T>,\n  fn: (value: T) => any,\n  scope?: Scope,\n) {\n  const nodeOpts = {\n    node: [\n      step.run({\n        fn: value => fn(value),\n      }),\n    ],\n  } as any\n  if (scope) {\n    const node = createNode(nodeOpts)\n    const id = (store as any).graphite.id\n    const links: Node[] = ((scope as any).additionalLinks[id] =\n      (scope as any).additionalLinks[id] || [])\n    links.push(node)\n    return () => {\n      const idx = links.indexOf(node)\n      if (idx !== -1) links.splice(idx, 1)\n      clearNode(node)\n    }\n  } else {\n    nodeOpts.parent = store\n    nodeOpts.family = {type: 'crosslink', owners: store}\n    const node = createNode(nodeOpts)\n    return () => {\n      clearNode(node)\n    }\n  }\n}\n","export function withDisplayName(name: string, Component: any) {\n  Component.displayName = name\n  return Component\n}\n","import {Store, is, Scope} from 'effector'\nimport React from 'react'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {throwError} from './throw'\nimport {createWatch} from './createWatch'\nimport {withDisplayName} from './withDisplayName'\n\nconst stateReader = <T>(store: Store<T>, scope?: Scope) =>\n  scope ? scope.getState(store) : store.getState()\nconst basicUpdateFilter = <T>(upd: T, oldValue: T) => upd !== oldValue\nconst createNotifier = () =>\n  React.useReducer((n: any, action: void) => n + 1, 0)[1]\n\nexport function useStoreBase<State>(store: Store<State>, scope?: Scope) {\n  if (!is.store(store)) throwError('expect useStore argument to be a store')\n\n  const currentValue = stateReader(store, scope)\n  const inc = createNotifier()\n  const currentStore = React.useRef({\n    store,\n    value: currentValue,\n    pending: false,\n  })\n  useIsomorphicLayoutEffect(() => {\n    const stop = createWatch(\n      store,\n      upd => {\n        const ref = currentStore.current\n        if (!ref.pending) {\n          ref.value = upd\n          ref.pending = true\n          inc()\n          ref.pending = false\n        }\n      },\n      scope,\n    )\n    const newValue = stateReader(store, scope)\n    const ref = currentStore.current\n    if (ref.store === store && ref.value !== newValue) {\n      ref.value = newValue\n      ref.pending = true\n      inc()\n      ref.pending = false\n    }\n    ref.store = store\n    return stop\n  }, [store])\n  return currentValue\n}\n\nexport function useStoreMapBase<State, Result, Keys extends ReadonlyArray<any>>(\n  [configOrStore, separateFn]: [\n    configOrStore:\n      | {\n          store: Store<State>\n          keys: Keys\n          fn(state: State, keys: Keys): Result\n          updateFilter?: (update: Result, current: Result) => boolean\n        }\n      | Store<State>,\n    separateFn?: (state: State, keys: Keys) => Result,\n  ],\n  scope?: Scope,\n): Result {\n  let fn: (state: State, keys: Keys) => Result\n  let updateFilter: (update: Result, current: Result) => boolean =\n    basicUpdateFilter\n  let store: Store<State>\n  let keys: Keys\n  if (separateFn) {\n    fn = separateFn\n    store = configOrStore as Store<State>\n    keys = [] as unknown as Keys\n  } else {\n    fn = (configOrStore as any).fn\n    store = (configOrStore as any).store\n    keys = (configOrStore as any).keys\n    updateFilter = (configOrStore as any).updateFilter || basicUpdateFilter\n  }\n  if (!is.store(store)) throwError('useStoreMap expects a store')\n  if (!Array.isArray(keys)) throwError('useStoreMap expects an array as keys')\n  if (typeof fn !== 'function') throwError('useStoreMap expects a function')\n  const result = React.useRef<{\n    fn: (state: State, keys: Keys) => Result\n    upd: (update: Result, current: Result) => boolean\n    val: Result\n    init: boolean\n    store: Store<State>\n  }>({} as any)\n  const refState = result.current\n  refState.fn = fn\n  refState.upd = updateFilter\n  refState.init = refState.store === store\n  refState.store = store\n  const inc = createNotifier()\n  const stop = React.useMemo(() => {\n    updateRef(stateReader(store, scope), keys, result.current)\n    return createWatch(\n      store,\n      val => updateRef(val, keys, result.current, inc),\n      scope,\n    )\n  }, keys)\n  useIsomorphicLayoutEffect(() => () => stop(), keys)\n  return refState.val\n}\nfunction updateRef<State, Keys, Result>(\n  sourceValue: State,\n  keys: Keys,\n  refState: {\n    fn: (state: State, keys: Keys) => Result\n    upd: (update: Result, current: Result) => boolean\n    val: Result\n    init: boolean\n  },\n  inc?: React.DispatchWithoutAction,\n) {\n  const newValue = refState.fn(sourceValue, keys)\n  if (!refState.init) {\n    refState.val = newValue\n    refState.init = true\n  } else {\n    if (\n      newValue !== undefined &&\n      basicUpdateFilter(newValue, refState.val) &&\n      refState.upd(newValue, refState.val)\n    ) {\n      refState.val = newValue\n      inc && inc()\n    }\n  }\n}\nexport function useListBase<T>(\n  list: Store<T[]>,\n  renderItem:\n    | {\n        keys?: any[]\n        fn(item: T, index: number): React.ReactNode\n        getKey?: (item: T) => string\n      }\n    | ((item: T, index: number) => React.ReactNode),\n  scope?: Scope,\n): React.ReactNode {\n  let keys = [] as any[]\n  let fn\n  let getKey: (item: T) => string\n  if (typeof renderItem === 'object' && renderItem !== null) {\n    if (renderItem.keys) keys = renderItem.keys\n    fn = renderItem.fn\n    if (renderItem.getKey) getKey = renderItem.getKey\n  } else {\n    fn = renderItem\n  }\n  if (!is.store(list)) throwError('expect useList first argument to be a store')\n  if (typeof fn !== 'function')\n    throwError(\"expect useList's renderItem to be a function\")\n  if (!Array.isArray(keys)) throwError(\"expect useList's keys to be an array\")\n  const Item = React.useMemo(() => {\n    const Item = withDisplayName(\n      `${list.shortName || 'Unknown'}.Item`,\n      (\n        props:\n          | {index: number; keys: any[]; keyVal: never; value: never}\n          | {index: never; keys: any[]; keyVal: string; value: T},\n      ) => {\n        const {index, keys, keyVal, value} = props\n        const isKeyed = !!fnRef.current[1]\n        if (isKeyed) {\n          return fnRef.current[0](value, keyVal as any)\n        }\n        const item = useStoreMapBase(\n          [\n            {\n              store: list,\n              keys: [index, ...keys],\n              fn: (list, keys) => list[keys[0]],\n            },\n          ],\n          scope,\n        )\n        return fnRef.current[0](item, index)\n      },\n    )\n    return React.memo(Item)\n  }, [list, !!getKey!])\n  const fnRef = React.useRef([fn, getKey!] as const)\n  fnRef.current = [fn, getKey!]\n  const keysSelfMemo = React.useMemo(() => keys, keys)\n  if (getKey!) {\n    return useStoreBase(list, scope).map(value => {\n      const key = fnRef.current[1](value)\n      return React.createElement(Item, {\n        keyVal: key,\n        key,\n        keys: keysSelfMemo,\n        value,\n      })\n    })\n  } else {\n    const length = useStoreMapBase(\n      [\n        {\n          store: list,\n          keys: [list],\n          fn: list => list.length,\n        },\n      ],\n      scope,\n    )\n    return Array.from({length}, (_, i) =>\n      React.createElement(Item, {\n        index: i,\n        key: i,\n        keys: keysSelfMemo,\n      }),\n    )\n  }\n}\n","import {Event, Store} from 'effector'\nimport {useStoreBase, useStoreMapBase, useListBase} from './apiBase'\n\n/**\nbind event to scope\n\nworks like React.useCallback, but for scopes\n*/\nexport function useEvent<T>(event: Event<T>): (payload: T) => T {\n  return event\n}\n\nexport function useStore<State>(store: Store<State>): State {\n  return useStoreBase(store)\n}\n\nexport function useStoreMap<State, Result, Keys extends ReadonlyArray<any>>(\n  configOrStore:\n    | {\n        store: Store<State>\n        keys: Keys\n        fn(state: State, keys: Keys): Result\n        updateFilter?: (update: Result, current: Result) => boolean\n      }\n    | Store<State>,\n  separateFn?: (state: State, keys: Keys) => Result,\n): Result {\n  return useStoreMapBase([configOrStore, separateFn])\n}\n\nexport function useList<T>(\n  list: Store<T[]>,\n  renderItem:\n    | {\n        keys?: any[]\n        fn(item: T, index: number): React.ReactNode\n        getKey?: (item: T) => string\n      }\n    | ((item: T, index: number) => React.ReactNode),\n): React.ReactNode {\n  return useListBase(list, renderItem)\n}\n","import React from 'react'\nimport {Store, is, combine, createEvent} from 'effector'\nimport {useStore} from './nossr'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {StoreView} from './index.h'\nimport {withDisplayName} from './withDisplayName'\nimport {throwError} from './throw'\n\nexport function createComponent<Props, State>(\n  shape: Store<State> | {[key: string]: Store<any> | any},\n  renderProp: (props: Props, state: State) => React.ReactNode,\n): StoreView<State, Props> {\n  let store: Store<any>\n  if (is.store(shape)) {\n    store = shape\n  } else {\n    if (typeof shape === 'object' && shape !== null) {\n      store = combine(shape)\n    } else throwError('shape should be a store or object with stores')\n  }\n  let storeName = 'Unknown'\n  //@ts-ignore\n  if (store && store.shortName) {\n    storeName = store.shortName\n  }\n  const mounted = createEvent<any>()\n  const unmounted = createEvent<any>()\n\n  function RenderComponent(props: Props) {\n    const propsRef = React.useRef(props)\n    const state = useStore(store)\n    useIsomorphicLayoutEffect(() => {\n      mounted({props: propsRef.current, state: store.getState()})\n      return () => {\n        unmounted({props: propsRef.current, state: store.getState()})\n      }\n    }, [])\n    const result = renderProp(props, state)\n    propsRef.current = props\n    return result\n  }\n  RenderComponent.mounted = mounted\n  RenderComponent.unmounted = unmounted\n  return withDisplayName(`${storeName}.View`, RenderComponent)\n}\n","import React from 'react'\nimport {Store} from 'effector'\n\nimport {useStore} from './nossr'\nimport {withDisplayName} from './withDisplayName'\n\nexport function createReactState<State>(\n  store: Store<State>,\n  Component: React.ComponentType<any>,\n) {\n  const wrappedComponentName =\n    Component.displayName || Component.name || 'Unknown'\n  return withDisplayName(`Connect(${wrappedComponentName})`, (props: any) =>\n    React.createElement(Component, {...props, ...(useStore(store) as any)}),\n  )\n}\n","import React from 'react'\nimport {createStore, launch, Store, Domain, createEvent} from 'effector'\nimport {Gate} from './index.h'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {withDisplayName} from './withDisplayName'\n\nexport function useGate<Props>(\n  GateComponent: Gate<Props>,\n  props: Props = {} as any,\n) {\n  const propsRef = React.useRef<any>(null)\n  useIsomorphicLayoutEffect(() => {\n    GateComponent.open(propsRef.current)\n    return () => GateComponent.close(propsRef.current) as any\n  }, [GateComponent])\n  if (!shallowCompare(propsRef.current, props)) {\n    propsRef.current = props\n    GateComponent.set(props)\n  }\n}\n\nfunction shallowCompare(a: any, b: any) {\n  if (a === b) return true\n  if (\n    typeof a === 'object' &&\n    a !== null &&\n    typeof b === 'object' &&\n    b !== null\n  ) {\n    const aKeys = Object.keys(a)\n    const bKeys = Object.keys(b)\n    if (aKeys.length !== bKeys.length) return false\n    for (let i = 0; i < aKeys.length; i++) {\n      const key = aKeys[i]\n      if (a[key] !== b[key]) return false\n    }\n    return true\n  }\n  return false\n}\nexport function createGateImplementation<State>({\n  name = 'gate',\n  domain,\n  defaultState,\n  hook: useGateHook,\n}: {\n  name?: string\n  domain?: Domain\n  defaultState: State | {}\n  hook: typeof useGate\n}): Gate<State> {\n  const fullName = `${domain ? `${domain.compositeName.fullName}/` : ''}${name}`\n  const set = createEvent<State>(`${fullName}.set`)\n  const open = createEvent<State>(`${fullName}.open`)\n  const close = createEvent<State>(`${fullName}.close`)\n  const status = createStore(Boolean(false), {\n    name: `${fullName}.status`,\n  })\n    .on(open, () => Boolean(true))\n    .on(close, () => Boolean(false))\n  const state = createStore(defaultState as State, {\n    name: `${fullName}.state`,\n  })\n    .on(set, (_, state) => state)\n    .reset(close)\n  if (domain) {\n    const {hooks} = domain as any\n    launch({\n      target: [\n        hooks.store,\n        hooks.store,\n        hooks.event,\n        hooks.event,\n        hooks.event,\n      ] as any,\n      params: [status, state, open, close, set],\n    })\n  }\n  function GateComponent(props: State) {\n    useGateHook(GateComponent as any, props)\n    return null\n  }\n  GateComponent.open = open\n  GateComponent.close = close\n  GateComponent.status = status\n  GateComponent.state = state\n  GateComponent.set = set\n  return withDisplayName(`Gate:${fullName}`, GateComponent)\n}\nexport function createGate<Props>(\n  name: string = 'gate',\n  defaultState: Props = {} as any,\n): Gate<Props> {\n  let domain\n  if (typeof name === 'object' && name !== null) {\n    if ('defaultState' in name) {\n      //@ts-ignore\n      defaultState = name.defaultState\n    }\n    //@ts-ignore\n    if (name.domain) domain = name.domain\n    //@ts-ignore\n    name = name.name\n  }\n  return createGateImplementation({\n    name,\n    domain,\n    defaultState,\n    hook: useGate,\n  })\n}\n","import React from 'react'\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n","export const throwError = (message: string) => {\n  throw Error(message)\n}\n","import React from 'react'\n\nimport {Store, is} from 'effector'\nimport {createReactState} from './createReactState'\n\nexport const connect = <State>(Component: React.ComponentType<any>) => (\n  store: Store<State>,\n) => {\n  let View: any = Component\n  if (typeof Component !== 'function') {\n    View = store\n    store = Component as any\n  }\n  return createReactState(store, View)\n}\n","import React from 'react'\nimport {Store} from 'effector'\nimport {useStore} from './nossr'\nimport {withDisplayName} from './withDisplayName'\n\nexport const createContextComponent = <Props, State, Context>(\n  store: Store<State>,\n  context: React.Context<Context>,\n  renderProp: (props: Props, state: State, context: Context) => React.ReactNode,\n): React.ComponentType<Props> =>\n  withDisplayName(\n    `${store.shortName || 'Unknown'}.ContextComponent`,\n    (props: any) => {\n      const ctx = React.useContext(context)\n      const state = useStore(store)\n      return renderProp(props, state, ctx)\n    },\n  )\n","import {Store} from 'effector'\n\nimport {StoreConsumer} from './index.h'\nimport {createComponent} from './createComponent'\n\nexport function createStoreConsumer<State>(\n  store: Store<State>,\n): StoreConsumer<State> {\n  return createComponent(store, ({children}, state) => children(state))\n}\n"],"names":["createWatch","store","fn","scope","nodeOpts","node","step","run","value","createNode","id","graphite","links","additionalLinks","push","idx","indexOf","splice","clearNode","parent","family","type","owners","withDisplayName","name","Component","displayName","useStoreBase","is","throwError","currentValue","stateReader","inc","createNotifier","currentStore","React","useRef","pending","useIsomorphicLayoutEffect","stop","upd","ref","current","newValue","useStoreMapBase","keys","configOrStore","separateFn","updateFilter","basicUpdateFilter","Array","isArray","result","refState","init","useMemo","updateRef","val","sourceValue","undefined","useStore","createComponent","shape","renderProp","RenderComponent","props","propsRef","state","mounted","getState","unmounted","combine","storeName","shortName","createEvent","createReactState","createElement","useGate","GateComponent","open","close","a","b","aKeys","Object","bKeys","length","i","key","shallowCompare","set","window","useLayoutEffect","useEffect","message","Error","oldValue","useReducer","n","View","context","ctx","useContext","defaultState","domain","useGateHook","hook","fullName","compositeName","status","createStore","Boolean","on","_","reset","hooks","launch","target","event","params","createGateImplementation","children","list","renderItem","getKey","Item","index","fnRef","keyVal","item","memo","keysSelfMemo","map","from","useListBase"],"mappings":"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"}